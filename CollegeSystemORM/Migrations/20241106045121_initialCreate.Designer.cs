// <auto-generated />
using System;
using CollegeSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollegeSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241106045121_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CollegeSystem.CollegeModels.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CourseID");

                    b.HasIndex("Dept_Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeptId"));

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeptId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Exam", b =>
                {
                    b.Property<int>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<int>("Exam_Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Exam_Code"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Room")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time");

                    b.HasKey("Dept_Id", "Exam_Code");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Faculty", b =>
                {
                    b.Property<int>("FID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FID"));

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("FDepartment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("FID");

                    b.HasIndex("DeptId");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.FacultyMobile", b =>
                {
                    b.Property<int>("FID")
                        .HasColumnType("int");

                    b.Property<string>("Mobile_no")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FID", "Mobile_no");

                    b.ToTable("FacultyMobiles");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Hostel", b =>
                {
                    b.Property<int>("Hostel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Hostel_Id"));

                    b.Property<string>("Hostel_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("No_of_seats")
                        .HasColumnType("int");

                    b.HasKey("Hostel_Id");

                    b.ToTable("Hostels");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Student", b =>
                {
                    b.Property<int>("SID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int>("FID")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hostel_Id")
                        .HasColumnType("int");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SID");

                    b.HasIndex("FID");

                    b.HasIndex("Hostel_Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.StudentCourse", b =>
                {
                    b.Property<int>("SID")
                        .HasColumnType("int");

                    b.Property<int>("Course_id")
                        .HasColumnType("int");

                    b.HasKey("SID", "Course_id");

                    b.HasIndex("Course_id");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.StudentPhone", b =>
                {
                    b.Property<int>("SID")
                        .HasColumnType("int");

                    b.Property<string>("Phone_no")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SID", "Phone_no");

                    b.ToTable("StudentPhones");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Subject", b =>
                {
                    b.Property<int>("Subject_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Subject_Id"));

                    b.Property<string>("Subject_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Teacher_Id")
                        .HasColumnType("int");

                    b.HasKey("Subject_Id");

                    b.HasIndex("Teacher_Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Course", b =>
                {
                    b.HasOne("CollegeSystem.CollegeModels.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("Dept_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Exam", b =>
                {
                    b.HasOne("CollegeSystem.CollegeModels.Department", "Department")
                        .WithMany("Exams")
                        .HasForeignKey("Dept_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Faculty", b =>
                {
                    b.HasOne("CollegeSystem.CollegeModels.Department", "Department")
                        .WithMany("Faculties")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.FacultyMobile", b =>
                {
                    b.HasOne("CollegeSystem.CollegeModels.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Student", b =>
                {
                    b.HasOne("CollegeSystem.CollegeModels.Faculty", "Teacher")
                        .WithMany("Students")
                        .HasForeignKey("FID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeSystem.CollegeModels.Hostel", "Hostel")
                        .WithMany("Students")
                        .HasForeignKey("Hostel_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hostel");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.StudentCourse", b =>
                {
                    b.HasOne("CollegeSystem.CollegeModels.Course", "Course")
                        .WithMany("StudentsInCourse")
                        .HasForeignKey("Course_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeSystem.CollegeModels.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("SID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.StudentPhone", b =>
                {
                    b.HasOne("CollegeSystem.CollegeModels.Student", "Student")
                        .WithMany("StudentPhones")
                        .HasForeignKey("SID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Subject", b =>
                {
                    b.HasOne("CollegeSystem.CollegeModels.Faculty", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("Teacher_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Course", b =>
                {
                    b.Navigation("StudentsInCourse");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Exams");

                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Faculty", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Hostel", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("CollegeSystem.CollegeModels.Student", b =>
                {
                    b.Navigation("StudentCourses");

                    b.Navigation("StudentPhones");
                });
#pragma warning restore 612, 618
        }
    }
}
